<launch>
  <arg name="debug" default="false"/>
  <param name="robot_type" value="j2s7s300" />
  <param name="robot_connected" value="false" />


  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find j2s7s300_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>


  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
		<param name="zeros/j2s7s300_joint_2" value="3.1415"/>		
	  <param name="zeros/j2s7s300_joint_4" value="3.1415"/> 
    <param name="zeros/j2s7s300_joint_6" value="3.1415"/> 
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />


  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find j2s7s300_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/> <!-- Set to false for real robot-->
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- launch rviz-->
  <arg name="command_args" default="-d $(find jaco_manipulation)/launch/manipulation_config.rviz"/>
  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
	args="$(arg command_args)" 
    output="screen">
    <rosparam command="load" file="$(find j2s7s300_moveit_config)/config/kinematics.yaml"/>
  </node>
</launch>